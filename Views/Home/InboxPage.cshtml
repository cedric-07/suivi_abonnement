@model suivi_abonnement.Models.AbonnementViewModel

@{
    ViewData["Title"] = "Liste des Abonnements";
    Layout = "~/Views/Shared/LayoutClient/_LayoutClient.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp-like Interface</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
    body {
        background-color: #f0f2f5;
        margin-top: 400px;
    }

    .chat-container {
        height: 90vh;
        display: grid;
        grid-template-columns: 30% 70%;
        border: 1px solid #ddd;
        border-radius: 10px;
        overflow: hidden;
    }

    .chat-list {
        background-color: #ffffff;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    .chat-header, .message-input {
        padding: 10px;
        background-color: #ededed;
        border-bottom: 1px solid #ddd;
    }

    .message-list {
        display: flex;
        flex-direction: column-reverse; /* Affiche les derniers messages en bas */
        height: calc(90vh - 120px);
        overflow-y: auto;
        padding: 15px;
        background-color: #e5ddd5;
    }

    .message-row {
        display: flex;
        align-items: flex-start;
        margin-bottom: 10px;
    }

    .message {
        padding: 8px 12px;
        margin-bottom: 10px;
        border-radius: 20px;
        max-width: 70%;
        position: relative; /* Permet de positionner la date en bas du message */
    }

    .sent {
        background-color: #dcf8c6;
        align-self: flex-end;
        text-align: right;
        margin-left: auto;
    }

    .received {
        background-color: #ffffff;
        align-self: flex-start;
        text-align: left;
    }

    .message-date {
        font-size: 0.75rem;
        color: #999;
        position: inherit;
        bottom: -5px;
        right: 5px; /* Aligner la date à droite */
    }

    .avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #ccc;
        margin-right: 10px;
    }

    .message-input {
        align-items: center;
        justify-content: center;
    }

    .message-input textarea {
        border-radius: 10px;
        margin-right: 10px;
    }

    .icon-btn {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #007bff;
        margin-left: 8px;
    }
</style>
</head>
<body>
    <div class="container mt-4">
        <div class="chat-container">
            <!-- Liste des conversations -->
            <div class="chat-list">
                <div class="chat-header">
                    <h5>Conversations</h5>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var user in Model.MessageViewModel.adminUser)
                    {
                        <li class="list-group-item">
                            <div class="d-flex align-items-center">
                                <div class="avatar">
                                    <i class="fas fa-user-circle text-white d-flex justify-content-center align-items-center" style="font-size: 1.5rem;"></i>
                                </div>
                                <span>@user.Username</span>
                            </div>
                            <a href="@Url.Action("index", "Message", new { receiverId = user.Id })" class="stretched-link"></a>
                        </li>
                    }
                </ul>
            </div>

            <!-- Boîte de chat -->
            <div class="chat-box d-flex flex-column">
                <div class="chat-header">
                    @if (Model.MessageViewModel.ReceiverId.HasValue)
                    {
                        var receiver = Model.MessageViewModel.Users?.FirstOrDefault(u => u.Id == Model.MessageViewModel.ReceiverId);
                        <h5>Chat avec @receiver?.Username</h5>
                    }
                    else
                    {
                        <h5>Sélectionnez un utilisateur pour discuter</h5>
                    }
                </div>

                <div class="message-list">
                    @foreach (var message in Model.MessageViewModel.Messages)
                    {
                        var messageDate = message.DateEnvoi;
                        string dateDisplay;

                        // Vérifier si le message a été envoyé aujourd'hui
                        if (messageDate.Date == DateTime.Now.Date)
                        {
                            dateDisplay = "Aujourd'hui à " + messageDate.ToString("HH:mm");
                        }
                        else
                        {
                            // Sinon, afficher le jour de la semaine et l'heure
                            dateDisplay = messageDate.ToString("dddd HH:mm");
                        }

                        <div class="message-row">
                            @if (message.SenderId == Model.MessageViewModel.CurrentUserId)  // Si le message est envoyé par l'utilisateur actuel
                            {
                                
                                <div class="message sent">
                                    @message.MessageText
                                    <div class="message-date">@dateDisplay</div>
                                </div>
                                <div class="avatar">
                                    <i class="fas fa-user-circle text-white d-flex justify-content-center align-items-center" style="font-size: 1.5rem;"></i>
                                </div>
                            }
                            else  // Si le message est reçu
                            {
                                <div class="avatar">
                                    <i class="fas fa-user-circle text-white d-flex justify-content-center align-items-center" style="font-size: 1.5rem;"></i>
                                </div>
                                <div class="message received">
                                    @message.MessageText
                                    <div class="message-date">@dateDisplay</div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <div class="message-input">
                    @if (Model.MessageViewModel.ReceiverId.HasValue)
                    {
                        <form method="post" action="@Url.Action("SendMessage", "Message")" enctype="multipart/form-data">
                            <input type="hidden" name="receiverId" value="@Model.MessageViewModel.ReceiverId" />
                            <div class="d-flex align-items-center w-100">
                                <button type="button" class="icon-btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Attacher un fichier">
                                    <i class="fas fa-paperclip"></i>
                                </button>
                                <button type="button" class="icon-btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Ajouter une image">
                                    <i class="fas fa-image"></i>
                                </button>
                                <input type="file" name="attachment" class="d-none" id="attachmentInput" />
                                <input type="file" name="image" class="d-none" id="imageInput" accept="image/*" />
                                <textarea name="messageText" placeholder="Tapez un message..." class="form-control"></textarea>
                                <button type="submit" class="btn btn-success ms-2">Envoyer</button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <p>Sélectionnez un utilisateur pour commencer à discuter.</p>
                    }
                </div>
            </div>
        </div>
    </div>

 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Afficher un input de fichier quand on clique sur les icônes
    document.querySelector('.fa-paperclip').addEventListener('click', function() {
        document.getElementById('attachmentInput').click();
    });
    document.querySelector('.fa-image').addEventListener('click', function() {
        document.getElementById('imageInput').click();
    });

    window.onload = function () {
        var messageList = document.querySelector('.message-list');
        messageList.scrollTop = messageList.scrollHeight;
    };
</script>
</body>
</html>
